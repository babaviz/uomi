$form-border-radius: 3px;
$input-blur-color: rgba(0,0,0,0.1);
$input-focus-color: rgb(96, 157, 255);
$text-input-border-size: 2px;
$text-input-padding: 13px;

$button-disabled-color: #999;

.form {
	padding: 1rem 1rem 0;
	position: relative;
}

.form-block {
	.form-item, .text-input, .button {
		width: 100%;
	}
}

.form-item {
	margin-bottom: 1rem;
	position: relative;
}

.form-label {
	font-size: 0.9rem;
	font-weight: bold;
	.form-block & {
		display: block;
	}
}

[magicFormItem] {
	.text-input {
		transition: padding 0.3s ease;
	}
	&.form-filled .text-input {
		padding-top: $text-input-padding + 5px;
		padding-bottom: $text-input-padding - 5px;
	}
	label {
		width: 100%;

		font-size: 0.8rem;
		font-weight: bold;

		color: rgba(0,0,0,0.6);

		display: block;
		padding-left: $text-input-padding + $text-input-border-size;
		padding-top: 0.3rem;

		position: absolute;
		top: 0;
		left: 0;
		z-index: 10;

		transition-property: opacity, transform;
		transition-duration: 0.3s;
		transition-timing-function: ease;

		opacity: 0;
		transform: translateY(10px);

		// all of this ensures that:
		// - the label won't wrap, won't overflow, will end in ellipsis if cut off,
		//   and that the ellipsis won't overlap the field border (the border-right rule)
		white-space: nowrap;
		text-overflow: ellipsis;
		pointer-events: none;
		overflow: hidden;
		border-right: $text-input-border-size solid transparent;
	}
	&.form-filled label {
			opacity: 1;
			transform: translateY(0);
		}

	&.form-focus label {
		color: $input-focus-color;
	}
}

.button {
	display: block;
	border: none;
	color: inherit;
	font: inherit;
	padding: 0.5rem 0.8rem;
	border-radius: $form-border-radius;
	background: transparent;
	cursor: pointer;
	transition-duration: 0.3s;
	transition-timing-function: ease;
	transition-property: border, background;
}

.button:active, .button:focus {
	outline: none !important;
}

.button:disabled {
	opacity: 0.6;
	text-decoration: line-through;
}

@mixin button-style($color) {
	&:not(.button-flat) {
		border: 1px solid rgba($color, 0.5);
	}
	color: $color;
	
	&:hover:not(.button-flat), &:focus:not(.button-flat) {
		border: 1px solid $color;
	}
}

.button-big {
	font-size: 1.3rem;
}

.button-flat {
	&, &:hover, &:focus { border: none; }
	background: transparent;
	&:hover {
		background: rgba(black, .05);
	}
	&:active {
		background: rgba(black, .15);
	}
	&:disabled {
		color: $button-disabled-color;
	}
}

.button-default {
	@include button-style($default-color);
}

.button-primary {
	@include button-style($primary-color);
}

.button-warning {
	@include button-style($warning-color);
}

.button-success {
	@include button-style($success-color);
}

.button-danger {
	@include button-style($danger-color);
}

.button-borderless {
	border: none;
	&:hover, &:focus {
		border: none;
	}
}

.dropdown {
	position: relative;
}

.dropdown-content {
	@include links-no-underline();
	@include links-same-color(inherit);
	width: 200px;
	position: absolute;
	display: none;
	z-index: 5;
	border-radius: $form-border-radius;
}

.dropdown-open .dropdown-content {
	display: block;
}

.dropdown-box {
	width: 100%;
	border: 1px solid rgba(black, .1);
	box-shadow: 0px 2px 10px rgba(black, .1);
	background: white;
	position: relative;
}

$dropdown-arrow-size: 12px;

.dropdown-arrow {
	margin-top: $dropdown-arrow-size + 4px;
}

.dropdown-arrow:before, .dropdown-arrow:after {
	width: 0;
	height: 0;
	display: block;
	content: '';
	border: $dropdown-arrow-size solid transparent;
	position: absolute;
	left: 8px;
}

.dropdown-arrow:before {
	border-width: $dropdown-arrow-size + 2px;
	border-bottom-color: #e0e0e0;
	top: -2*$dropdown-arrow-size - 4px;
}

.dropdown-arrow:after {
	border-bottom-color: white;
	top: -2*$dropdown-arrow-size;
}

.dropdown-content-left {
	right: 0;

	& .dropdown-arrow:after {
		left: initial;
		right: 8px;
	}

	& .dropdown-arrow:before {
		left: initial;
		right: 6px;
	}
}

.dropdown-item {
	padding: 0.5rem;
	text-align: left;
	border-bottom: 1px solid rgba(black, .1);
	cursor: pointer;

	&:hover {
		background: rgba(black, .05);
	}

	&:last-of-type {
		border-bottom: none;
	}
}

.text-input {
	background: white;
	font: inherit;
	padding: $text-input-padding;
	border: $text-input-border-size solid $input-blur-color;
	border-radius: $form-border-radius;

	&:focus {
		outline: none;
		border-color: $input-focus-color;
	}
}

.text-input::placeholder {
	color: rgba(0,0,0,0.3);
}


.form-vertical-item-group {
	margin-bottom: 1rem;

	.form-item {
		margin-bottom: $text-input-border-size;
		z-index: 1;
	}

	.text-input {
		border-radius: 0;
		border-top-width: 0;
		border-bottom-width: 0;

		box-shadow: 0px    $text-input-border-size 0px $input-blur-color;

		&:focus {
			box-shadow: 0px  $text-input-border-size 0px $input-focus-color,
			            0px -1*$text-input-border-size 0px $input-focus-color;
		}
	}

	.form-group-first-item .text-input {
		border-top-left-radius: $form-border-radius;
		border-top-right-radius: $form-border-radius;
		border-top-width: $text-input-border-size;

		&:focus {
			box-shadow: 0px  $text-input-border-size 0px $input-focus-color;
		}
	}

	.form-group-last-item .text-input {
		border-bottom-left-radius: $form-border-radius;
		border-bottom-right-radius: $form-border-radius;
		border-bottom-width: $text-input-border-size;

		box-shadow: none;

		&:focus {
			box-shadow: 0px  -1*$text-input-border-size 0px $input-focus-color;
		}
	}

	.form-focus {
		z-index: 2;
	}

}
